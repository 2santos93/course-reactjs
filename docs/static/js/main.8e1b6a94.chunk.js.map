{"version":3,"sources":["Components/AddCategory.js","Services/gifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","a","q","limit","url","encodeURI","fetch","response","json","data","gifs","map","id","images","title","downsized_large","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","gifsData","getGifsData","useFetchGifs","gif","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"yLAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SARY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,QAAU,IAC/BR,GAAe,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC/CN,EAAc,MAId,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBS,SAACP,GAClB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,S,+BCThBG,EAAO,uCAAG,2CAAAC,EAAA,6DAAQC,EAAR,EAAQA,EAAR,IAAWC,aAAX,MAAiB,EAAjB,EACNC,EADM,iDAC0CC,UAAUH,GADpD,kBACgEC,EADhE,sDAEWG,MAAMF,GAFjB,cAENG,EAFM,gBAGSA,EAASC,OAHlB,uBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,MAAd,MAClB,CACIF,KACAR,IAAKS,EAAOE,gBAAgBX,IAC5BU,YARI,kBAWLJ,GAXK,4CAAH,sDCWEM,EAXK,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIR,EAAgB,EAAhBA,IAAKU,EAAW,EAAXA,MAE3B,OACI,sBAAKG,UAAU,OAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKL,EAAOG,UAAU,eACrC,4BAAaH,GAALF,OCmBLQ,EApBC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,ECAJ,SAACA,GAAc,IAAD,EAEZlC,mBAAS,CAACuB,KAAK,GAAIY,SAAQ,IAFf,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAnBAC,qBAAU,WAAM,4CACZ,4BAAAxB,EAAA,sEAE2BD,EAAQ,CAACE,EAAEmB,IAFtC,OAEUK,EAFV,OAIIF,EACI,CACIF,SAAQ,EACRZ,KAAK,GAAD,mBACGgB,GADH,YAEGH,EAAMb,SATzB,4CADY,uBAAC,WAAD,wBAgBZiB,KACD,CAACN,IAEGE,EDrBiBK,CAAaP,GAA9BX,EAFqB,EAErBA,KAAMY,EAFe,EAEfA,QAEb,OACI,sBAAKL,UAAU,oCAAf,UACA,6BAAKI,IAEAC,GAAW,oBAAIL,UAAU,uCAAd,qBAEZ,qBAAKA,UAAU,iBAAf,SAEIP,EAAKC,KAAI,SAACkB,GAAD,OAAS,cAAC,EAAD,eAA8BA,GAAZA,EAAIjB,aEMzCkB,EAlBM,WAAO,IAAD,EAEa3C,mBAAS,IAFtB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAIvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACES,EAAWgB,KAAK,SAACU,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCV9BU,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8e1b6a94.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from \"react\";\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const inputHandler = (e) => {\r\n        const value = e.target.value;\r\n        setinputValue(value);\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length <= 2) return;\r\n        setCategories( (categories) => [inputValue, ...categories]);\r\n        setinputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={inputHandler}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","const getGifs = async ({q, limit=4}) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(q)}&limit=${limit}&api_key=gQ6gT7G7XPbKifJa0f09SpOWkTt52c67`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    const gifs = data.map(({id, images, title}) => (\r\n        {\r\n            id, \r\n            url: images.downsized_large.url,\r\n            title\r\n        }\r\n    )); \r\n    return gifs;\r\n}\r\n\r\nexport {\r\n    getGifs\r\n}","const GifGridItem = ({id, url, title}) => {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <img src={url} alt={title} className=\"card-image\" />\r\n            <p key={id}>{title}</p>\r\n        </div>\r\n        );\r\n\r\n}\r\n\r\nexport default GifGridItem;","\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {gifs, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n        <h1>{category}</h1>\r\n\r\n            {loading && <h2 className=\"animate__animated animate__heartBeat\">Loading</h2>}\r\n\r\n            <div className=\"card-container\">\r\n            {\r\n                gifs.map((gif) => <GifGridItem key={gif.id} {...gif}/>)\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\";\r\n\r\nimport { getGifs } from \"../Services/gifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({gifs:[], loading:true});\r\n\r\n    useEffect(() => {\r\n        async function getGifsData(){\r\n            \r\n            const gifsData = await getGifs({q:category});\r\n            \r\n            setState(\r\n                {\r\n                    loading:false,\r\n                    gifs:[\r\n                        ...gifsData,\r\n                        ...state.gifs\r\n                    ]\r\n                }\r\n            )\r\n        }\r\n\r\n        getGifsData();\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([])\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n            <hr />\r\n            { categories.map( (category) => (\r\n                <GifGrid key={category} category={category} />\r\n            )) }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './Components/GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}